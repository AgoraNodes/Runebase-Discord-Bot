module.exports = {
  up: async (queryInterface, Sequelize) => {
    // Get all the itemDifficultyId's
    const itemDifficultyNormal = await queryInterface.rawSelect('itemDifficulty', {
      where: {
        name: 'Normal',
      },
    }, ['id']);
    const itemDifficultyExceptional = await queryInterface.rawSelect('itemDifficulty', {
      where: {
        name: 'Exceptional',
      },
    }, ['id']);
    const itemDifficultyElite = await queryInterface.rawSelect('itemDifficulty', {
      where: {
        name: 'Elite',
      },
    }, ['id']);

    // Dagger
    const itemFamilyDagger = await queryInterface.rawSelect('itemFamily', {
      where: {
        name: 'Dagger',
      },
    }, ['id']);
    await queryInterface.bulkInsert('itemBase', [
      {
        name: 'Dagger',
        levelReq: null,
        levelMonster: 3,
        minDefense: null,
        maxDefense: null,
        minDamage: 1,
        maxDamage: 4,
        strengthReq: null,
        dexterityReq: null,
        durability: 16,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDagger,
        itemDifficultyId: itemDifficultyNormal,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Poignard',
        levelReq: 19,
        levelMonster: 31,
        minDefense: null,
        maxDefense: null,
        minDamage: 6,
        maxDamage: 18,
        strengthReq: 25,
        dexterityReq: null,
        durability: 16,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDagger,
        itemDifficultyId: itemDifficultyExceptional,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Bone Knife',
        levelReq: 43,
        levelMonster: 58,
        minDefense: null,
        maxDefense: null,
        minDamage: 23,
        maxDamage: 49,
        strengthReq: 38,
        dexterityReq: 75,
        durability: 26,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDagger,
        itemDifficultyId: itemDifficultyElite,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);

    // Dagger
    const itemFamilyDirk = await queryInterface.rawSelect('itemFamily', {
      where: {
        name: 'Dirk',
      },
    }, ['id']);
    await queryInterface.bulkInsert('itemBase', [
      {
        name: 'Dirk',
        levelReq: null,
        levelMonster: 9,
        minDefense: null,
        maxDefense: null,
        minDamage: 3,
        maxDamage: 9,
        strengthReq: null,
        dexterityReq: 25,
        durability: 20,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDirk,
        itemDifficultyId: itemDifficultyNormal,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Rondel',
        levelReq: 24,
        levelMonster: 36,
        minDefense: null,
        maxDefense: null,
        minDamage: 10,
        maxDamage: 26,
        strengthReq: 25,
        dexterityReq: 58,
        durability: 20,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDirk,
        itemDifficultyId: itemDifficultyExceptional,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Mithril Point',
        levelReq: 52,
        levelMonster: 70,
        minDefense: null,
        maxDefense: null,
        minDamage: 37,
        maxDamage: 53,
        strengthReq: 55,
        dexterityReq: 98,
        durability: 55,
        sockets: 1,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyDirk,
        itemDifficultyId: itemDifficultyElite,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);

    // Dagger
    const itemFamilyKris = await queryInterface.rawSelect('itemFamily', {
      where: {
        name: 'Kris',
      },
    }, ['id']);
    await queryInterface.bulkInsert('itemBase', [
      {
        name: 'Kris',
        levelReq: null,
        levelMonster: 17,
        minDefense: null,
        maxDefense: null,
        minDamage: 2,
        maxDamage: 11,
        strengthReq: null,
        dexterityReq: 45,
        durability: 24,
        sockets: 3,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyKris,
        itemDifficultyId: itemDifficultyNormal,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Cinquedeas',
        levelReq: 25,
        levelMonster: 42,
        minDefense: null,
        maxDefense: null,
        minDamage: 15,
        maxDamage: 31,
        strengthReq: 25,
        dexterityReq: 88,
        durability: 20,
        sockets: 3,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyKris,
        itemDifficultyId: itemDifficultyExceptional,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Fanged Knife',
        levelReq: 62,
        levelMonster: 83,
        minDefense: null,
        maxDefense: null,
        minDamage: 15,
        maxDamage: 57,
        strengthReq: 42,
        dexterityReq: 86,
        durability: 36,
        sockets: 3,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyKris,
        itemDifficultyId: itemDifficultyElite,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);

    // Dagger
    const itemFamilyBlade = await queryInterface.rawSelect('itemFamily', {
      where: {
        name: 'Blade',
      },
    }, ['id']);
    await queryInterface.bulkInsert('itemBase', [
      {
        name: 'Blade',
        levelReq: null,
        levelMonster: 23,
        minDefense: null,
        maxDefense: null,
        minDamage: 4,
        maxDamage: 15,
        strengthReq: 35,
        dexterityReq: 51,
        durability: 24,
        sockets: 2,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyBlade,
        itemDifficultyId: itemDifficultyNormal,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Stiletto',
        levelReq: 25,
        levelMonster: 46,
        minDefense: null,
        maxDefense: null,
        minDamage: 19,
        maxDamage: 36,
        strengthReq: 47,
        dexterityReq: 97,
        durability: 24,
        sockets: 2,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyBlade,
        itemDifficultyId: itemDifficultyExceptional,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'Legend Spike',
        levelReq: 66,
        levelMonster: 85,
        minDefense: null,
        maxDefense: null,
        minDamage: 31,
        maxDamage: 47,
        strengthReq: 65,
        dexterityReq: 67,
        durability: 47,
        sockets: 2,
        block: null,
        maxStack: null,
        itemFamilyId: itemFamilyBlade,
        itemDifficultyId: itemDifficultyElite,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },
  down: (queryInterface, Sequelize) => queryInterface.bulkDelete('itemBase', null, {}),
};
